/**
 * If this throws tsc error, you need to remove some lines from .d.ts that's
 * generated by puerts. The lines are:
 *
 * public get alignContent(): any;
 * public set alignContent(value: any);
 * public get alignItems(): any;
 * public set alignItems(value: any);
 * ...
 * public get wordSpacing(): any;
 * public set wordSpacing(value: any);
 */

// Don't do any import here, just declare the types

type VisualElement = CS.UnityEngine.UIElements.VisualElement;
type Vector2 = CS.UnityEngine.Vector2;
type Vector3 = CS.UnityEngine.Vector3;
type float2 = CS.Unity.Mathematics.float2;
type float3 = CS.Unity.Mathematics.float3;
type float4 = CS.Unity.Mathematics.float4;
type Sprite = CS.UnityEngine.Sprite;
type Texture = CS.UnityEngine.Texture;

type StyleEnum<T> = CS.UnityEngine.UIElements.StyleEnum$1<T>;
type Align = CS.UnityEngine.UIElements.Align;
type StyleColor = CS.UnityEngine.UIElements.StyleColor;
type Color = CS.UnityEngine.Color;
type StyleBackground = CS.UnityEngine.UIElements.StyleBackground;
type Background = CS.UnityEngine.UIElements.Background;
type StyleBackgroundSize = CS.UnityEngine.UIElements.StyleBackgroundSize;
type BackgroundSize = CS.UnityEngine.UIElements.BackgroundSize;
type StyleBackgroundRepeat = CS.UnityEngine.UIElements.StyleBackgroundRepeat;
type BackgroundRepeat = CS.UnityEngine.UIElements.BackgroundRepeat;
type StyleBackgroundPosition = CS.UnityEngine.UIElements.StyleBackgroundPosition;
type BackgroundPosition = CS.UnityEngine.UIElements.BackgroundPosition;
type StyleFloat = CS.UnityEngine.UIElements.StyleFloat;
type StyleLength = CS.UnityEngine.UIElements.StyleLength;
type Length = CS.UnityEngine.UIElements.Length;
type StyleCursor = CS.UnityEngine.UIElements.StyleCursor;
type StyleFont = CS.UnityEngine.UIElements.StyleFont;
type StyleFontDefinition = CS.UnityEngine.UIElements.StyleFontDefinition;
type StyleTextShadow = CS.UnityEngine.UIElements.StyleTextShadow;
type StyleTransformOrigin = CS.UnityEngine.UIElements.StyleTransformOrigin;
type StyleList<T> = CS.UnityEngine.UIElements.StyleList$1<T>;
type StylePropertyName = CS.UnityEngine.UIElements.StylePropertyName;
type EasingFunction = CS.UnityEngine.UIElements.EasingFunction;
type StyleTranslate = CS.UnityEngine.UIElements.StyleTranslate;
type StyleScale = CS.UnityEngine.UIElements.StyleScale;
type StyleInt = CS.UnityEngine.UIElements.StyleInt;
type Cursor = CS.UnityEngine.UIElements.Cursor;
type DisplayStyle = CS.UnityEngine.UIElements.DisplayStyle;
type Overflow = CS.UnityEngine.UIElements.Overflow;
type Position = CS.UnityEngine.UIElements.Position;
type Rotate = CS.UnityEngine.UIElements.Rotate;
type Scale = CS.UnityEngine.UIElements.Scale;
type TimeValue = CS.UnityEngine.UIElements.TimeValue;
type StyleRotate = CS.UnityEngine.UIElements.StyleRotate;
type Wrap = CS.UnityEngine.UIElements.Wrap;
type Justify = CS.UnityEngine.UIElements.Justify;
type FlexDirection = CS.UnityEngine.UIElements.FlexDirection;
type TextOverflow = CS.UnityEngine.UIElements.TextOverflow;
type TextShadow = CS.UnityEngine.UIElements.TextShadow;
type TransformOrigin = CS.UnityEngine.UIElements.TransformOrigin;
type Time = CS.UnityEngine.Time;
type StyleFontStyle = CS.UnityEngine.FontStyle;
type Translate = CS.UnityEngine.UIElements.Translate;
type FontDefinition = CS.UnityEngine.UIElements.FontDefinition;
type ScaleMode = CS.UnityEngine.ScaleMode;
type OverflowClipBox = CS.UnityEngine.UIElements.OverflowClipBox;
type Visibility = CS.UnityEngine.UIElements.Visibility;
type WhiteSpace = CS.UnityEngine.UIElements.WhiteSpace;
type TextOverflowPosition = CS.UnityEngine.UIElements.TextOverflowPosition;
type FilterFunction = CS.UnityEngine.UIElements.FilterFunction;

declare namespace CS.OneJS.Dom {

    interface DomStyle {
        alignContent: StyleEnum<Align> | Align | string | null | number;
        alignItems: StyleEnum<Align> | Align | string | null | number;
        alignSelf: StyleEnum<Align> | Align | string | null | number;
        backgroundColor: StyleColor | Color | string | null | number[] | float4;
        backgroundImage: StyleBackground | Background | string | null | Sprite | Texture;
        backgroundSize: StyleBackgroundSize | BackgroundSize | string | null;
        backgroundRepeat: StyleBackgroundRepeat | BackgroundRepeat | string | null;
        backgroundPosition: StyleBackgroundPosition | BackgroundPosition | string | null;
        backgroundPositionX: StyleBackgroundPosition | BackgroundPosition | string | null;
        backgroundPositionY: StyleBackgroundPosition | BackgroundPosition | string | null;
        borderColor: StyleColor | Color | string | null | Color[] | number[] | float4;
        borderWidth: StyleFloat | number | string | null | number[];
        borderRadius: StyleLength | Length | string | null | number | number[];
        borderBottomColor: StyleColor | Color | string | null | number[] | float4;
        borderTopColor: StyleColor | Color | string | null | number[] | float4;
        borderLeftColor: StyleColor | Color | string | null | number[] | float4;
        borderRightColor: StyleColor | Color | string | null | number[] | float4;
        borderBottomWidth: StyleFloat | number | string | null;
        borderTopWidth: StyleFloat | number | string | null;
        borderLeftWidth: StyleFloat | number | string | null;
        borderRightWidth: StyleFloat | number | string | null;
        borderTopLeftRadius: StyleLength | Length | string | null | number;
        borderTopRightRadius: StyleLength | Length | string | null | number;
        borderBottomRightRadius: StyleLength | Length | string | null | number;
        borderBottomLeftRadius: StyleLength | Length | string | null | number;
        bottom: StyleLength | Length | string | null | number;
        color: StyleColor | Color | string | null | number[] | float4;
        cursor: StyleCursor | Cursor | null;
        display: StyleEnum<DisplayStyle> | DisplayStyle | string | null | number;
        filter: StyleList<FilterFunction> | FilterFunction | string | null;
        flexBasis: StyleLength | Length | string | null | number;
        flexDirection: StyleEnum<FlexDirection> | FlexDirection | string | null | number;
        flexGrow: StyleFloat | number | string | null;
        flexShrink: StyleFloat | number | string | null;
        flexWrap: StyleEnum<Wrap> | Wrap | string | null | number;
        fontSize: StyleLength | Length | string | null | number;
        height: StyleLength | Length | string | null | number;
        justifyContent: StyleEnum<Justify> | Justify | string | null | number;
        left: StyleLength | Length | string | null | number;
        letterSpacing: StyleLength | Length | string | null | number;
        margin: StyleLength | Length | string | null | number[] | number;
        marginBottom: StyleLength | Length | string | null | number;
        marginLeft: StyleLength | Length | string | null | number;
        marginRight: StyleLength | Length | string | null | number;
        marginTop: StyleLength | Length | string | null | number;
        maxHeight: StyleLength | Length | string | null | number;
        maxWidth: StyleLength | Length | string | null | number;
        minHeight: StyleLength | Length | string | null | number;
        minWidth: StyleLength | Length | string | null | number;
        opacity: StyleFloat | number | string | null | number;
        overflow: StyleEnum<Overflow> | Overflow | string | null | number;
        padding: StyleLength | Length | string | null | number[] | number;
        paddingBottom: StyleLength | Length | string | null | number;
        paddingLeft: StyleLength | Length | string | null | number;
        paddingRight: StyleLength | Length | string | null | number;
        paddingTop: StyleLength | Length | string | null | number;
        position: StyleEnum<Position> | Position | string | null | number;
        right: StyleLength | Length | string | null | number;
        rotate: StyleRotate | Rotate | string | null | number;
        scale: StyleScale | Scale | string | null | number | number[] | float2;
        textOverflow: StyleEnum<TextOverflow> | TextOverflow | string | null | number;
        textShadow: StyleTextShadow | TextShadow | string | null;
        top: StyleLength | Length | string | null | number;
        transformOrigin: StyleTransformOrigin | TransformOrigin | string | string[] | null | number[] | float2;
        transitionDelay: StyleList<TimeValue> | TimeValue | string | null | string[] | number | number[];
        transitionDuration: StyleList<TimeValue> | TimeValue | string | null | string[] | number | number[];
        transitionProperty: StyleList<StylePropertyName> | StylePropertyName | string | null | string[];
        transitionTimingFunction: StyleList<EasingFunction> | EasingFunction | string | null | string[];
        translate: StyleTranslate | Translate | string | null | Vector2 | Vector3 | number[];
        unityBackgroundImageTintColor: StyleColor | Color | string | null | number[] | float4;
        unityBackgroundScaleMode: StyleEnum<ScaleMode> | ScaleMode | string | null | number;
        unityFont: StyleFont | UnityEngine.Font | string | null;
        unityFontDefinition: StyleFontDefinition | FontDefinition | string | null;
        unityFontStyleAndWeight: StyleEnum<UnityEngine.FontStyle> | UnityEngine.FontStyle | string | null | number;
        unityOverflowClipBox: StyleEnum<OverflowClipBox> | OverflowClipBox | string | null | number;
        unityParagraphSpacing: StyleLength | Length | string | null | number;
        unitySliceBottom: StyleInt | number | string | null;
        unitySliceLeft: StyleInt | number | string | null;
        unitySliceRight: StyleInt | number | string | null;
        unitySliceTop: StyleInt | number | string | null;
        unitySliceScale: StyleFloat | number | string | null;
        unityTextAlign: StyleEnum<UnityEngine.TextAnchor> | UnityEngine.TextAnchor | string | null | number;
        unityTextOutlineColor: StyleColor | Color | string | null | number[] | float4;
        unityTextOutlineWidth: StyleFloat | number | string | null;
        unityTextOverflowPosition: StyleEnum<TextOverflowPosition> | TextOverflowPosition | string | null | number;
        visibility: StyleEnum<Visibility> | Visibility | string | null | number;
        whiteSpace: StyleEnum<WhiteSpace> | WhiteSpace | string | null | number;
        width: StyleLength | Length | string | null | number;
        wordSpacing: StyleLength | Length | string | null | number;

        transform: string | null;
        transition: string | null;
    }
}